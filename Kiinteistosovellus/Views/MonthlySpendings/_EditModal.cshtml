@model Kiinteistosovellus.Models.MonthlySpendings

<div class="modal fade" id="ModalMSEdit">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Muokkaa kulua</h3>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "editMSForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.MonthlySpendingID)

                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    Aloituspäivämäärä* @Html.ValidationMessageFor(model => model.DateBegin, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DateBegin, new { htmlAttributes = new { @Type = "date", @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    Päättymispäivämäärä @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @Type = "date", @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    Kulutustyyppi* @Html.ValidationMessageFor(model => model.SpendingTypeID, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SpendingTypeID", null, new { @class = "form-control form-select" })
                                        <div style="text-align:right; padding-right:30px"><a class="card-link" role="button" id="lisaaUusiHiddenField">Lisää uusi kulutustyyppi</a></div>
                                    </div>
                                </div>

                                <div class="form-group" id="hiddenFieldAddType" style="display:none">
                                    Tyypin nimi* <span class="field-validation-error text-danger" id="fakeErrorTypeName"></span>
                                    <div class="col-md-10 input-group">
                                        <input type="text" maxlength="100" size="500" class="form-control tyhjennaKentta" id="fakeFormTypeName" onkeyup="paivitaOikeaKenttaName()" />

                                    </div>
                                    Yksikkönimi <span class="field-validation-error text-danger" id="fakeErrorUnit"></span>
                                    <div class="col-md-10 input-group">
                                        <input type="text" maxlength="100" size="500" class="form-control tyhjennaKentta" id="fakeFormUnit" onkeyup="paivitaOikeaKenttaUnit()" />

                                    </div>
                                    <div style="text-align: right; padding-right: 5px">
                                        <a class="card-link" role="button" id="lisaaUusiType">Lisää</a> | <a class="card-link closeAddType" role="button" id="peruuta">Peruuta</a>
                                    </div>
                                </div>
                                <div class="form-group" id="successfullyAddedType" style="display:none;">
                                    <div class="text-success">Tyyppi lisätty onnistuneesti</div>
                                    <div style="padding:0 3px"><a class="card-link" role="button" id="lisaaToinenTyyppi">Lisää toinen tyyppi</a> | <a class="card-link closeAddType" role="button">Poistu</a></div>
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    Käytetyt mittayksiköt @Html.ValidationMessageFor(model => model.AmountOfUnits, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @{ Html.EnableClientValidation(false); }
                                        @Html.EditorFor(model => model.AmountOfUnits, new { htmlAttributes = new { @class = "form-control" } })
                                        @{ Html.EnableClientValidation(true); }
                                    </div>
                                </div>

                                <div class="form-group">
                                    Yksikköhinta @Html.ValidationMessageFor(model => model.PricePerUnit, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @{ Html.EnableClientValidation(false); }
                                        @Html.EditorFor(model => model.PricePerUnit, new { htmlAttributes = new { @class = "form-control" } })
                                        @{ Html.EnableClientValidation(true); }
                                    </div>
                                </div>

                                <div class="form-group">
                                    Siirtomaksu @Html.ValidationMessageFor(model => model.TransferPayment, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @{ Html.EnableClientValidation(false); }
                                        @Html.EditorFor(model => model.TransferPayment, new { htmlAttributes = new { @class = "form-control" } })
                                        @{ Html.EnableClientValidation(true); }
                                    </div>
                                </div>

                                <div class="form-group">
                                    Kokonaishinta* @Html.ValidationMessageFor(model => model.FullPrice, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @{ Html.EnableClientValidation(false); }
                                        @Html.EditorFor(model => model.FullPrice, new { htmlAttributes = new { @class = "form-control" } })
                                        @{ Html.EnableClientValidation(true); }
                                    </div>
                                </div>

                                <div class="form-group">
                                    Yrityksen nimi @Html.ValidationMessageFor(model => model.ContractorID, "", new { @class = "text-danger" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ContractorID", null, new { @class = "form-control form-select" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="button" id="submitModal" style="display:none" value="Tallenna" class="btn btn-primary" />
                        </div>
                    </div>
                }


                <div class="modal-footer">
                    <div class="form-actions no-color">
                        <input type="button" onclick="submitModal()" value="Lisää" class="btn btn-primary" />
                        @Html.ActionLink("Takaisin", "Index")
                    </div>
                </div>
                <div id="divForPartialPseudo" style="display:none;">

                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function paivitaOikeaKenttaName() {
        var falseFormInput = $("#fakeFormTypeName");
        var realForm = $("#TypeName");
        realForm.val(falseFormInput.val());
    }
    function paivitaOikeaKenttaUnit() {
        var falseFormInput = $("#fakeFormUnit");
        var realForm = $("#Unit");
        realForm.val(falseFormInput.val());
    }

    //Tuo tyypinlisäyskentän näkyviin---- TÄTÄ PITÄÄ  PÄIVITTÄÄ TYYLIKKÄÄMMÄKSI
    $("#lisaaUusiHiddenField").click(function () {
        partialViewGet("MonthlySpendings", "_ModalCreateMonthSpendingType", "divForPartialPseudo");
        document.getElementById("hiddenFieldAddType").style.display = "inline-block";
        document.getElementById("lisaaUusiHiddenField").style.display = "none";
    });

    $("#lisaaToinenTyyppi").click(function () {
        partialViewGet("MonthlySpendings", "_ModalCreateMonthSpendingType", "divForPartialPseudo");
        document.getElementById("hiddenFieldAddType").style.display = "inline-block";
        document.getElementById("lisaaUusiHiddenField").style.display = "none";
        document.getElementById("successfullyAddedType").style.display = "none";
    });

    $(".closeAddType").click(function () {
        document.getElementById("hiddenFieldAddType").style.display = "none";
        document.getElementById("lisaaUusiHiddenField").style.display = "block";
        document.getElementById("divForPartialPseudo").innerHTML = "";
        document.getElementById("successfullyAddedType").style.display = "none";
    });


    //luodaan uusi kulutyyppi
    $("#lisaaUusiType").click(async function () {
        partialViewSubmit("MonthlySpendings", "_ModalCreateMonthSpendingType", "divForPartialPseudo", "createTypeForm", "SpendingTypeID");
    });


    //Ajax-pyynnöllä submitataan modaali ja luodaan se uudestaan pääsivulle
    function submitModal() {
        submitModalPost("MonthlySpendings", "_EditModal", "editMSForm", "ModalMSEdit");
    };

    //Kokonaishinnan merkkien tarkastelu
    $("#FullPrice").keypress(function () {
        //console.log("toimii eventlistener");
        isNumberKey(event, "FullPrice");
    });

    //Siirtohinnan merkkien tarkastelu
    $("#TransferPayment").keypress(function () {
        //console.log("toimii eventlistener");
        isNumberKey(event, "TransferPayment");
    });

    //Yksikköhinnan merkkien tarkastelu
    $("#PricePerUnit").keypress(function () {
        //console.log("toimii eventlistener");
        isNumberKey(event, "PricePerUnit");
    });

    //Kokokaiskulutuksen merkkien tarkastelu
    $("#AmountOfUnits").keypress(function () {
        //console.log("toimii eventlistener");
        isNumberKey(event, "AmountOfUnits");
    });

    $("#FullPrice").keyup(function () {
        validateKeyUp(event, "FullPrice");
    });

    $("#TransferPayment").keyup(function () {
        validateKeyUp(event, "TransferPayment");
    });

    $("#PricePerUnit").keyup(function () {
        validateKeyUp(event, "PricePerUnit");
    });

    $("#AmountOfUnits").keyup(function () {
        validateKeyUp(event, "AmountOfUnits");
    });

    //Removes Type 1000 from dropdown list, as 1000 is deleted value
    $(function () {
        $("#SpendingTypeID option[value='1000']").remove();
    })
</script>




