@model IEnumerable<Kiinteistosovellus.Models.MonthlySpendings>
@foreach (var item in Model)
{

    <tr class="card-body filtering">
        <td class="centeredTds">
            @Html.ValueFor(modelItem => item.DateBegin, "{0:dd.MM.yyyy}")
        </td>
        @{
            if (item.DateEnd != null)
            {
                <td class="centeredTds">@Html.ValueFor(modelItem => item.DateEnd, "{0:dd.MM.yyyy}")</td>
            }
            else
            {
                <td class="centeredTds">@Html.ValueFor(modelItem => item.DateBegin, "{0:dd.MM.yyyy}")</td>
            }
        }
        <td class="centeredTds">
            @Html.DisplayFor(modelItem => item.MonthlySpendingTypes.TypeName)
        </td>
        <td class="centeredTds">

            @Html.DisplayFor(modelItem => item.AmountOfUnits)
        </td>
        <td class="centeredTds">
            @Html.DisplayFor(modelItem => item.MonthlySpendingTypes.Unit)
        </td>
        @{
            if (ViewBag.Disabled == "hide")
            {
                <td class="details centeredTds d-none" style="font-weight: bold;">
                    @Html.DisplayFor(modelItem => item.PricePerUnit)
                </td>
                <td class="details centeredTds d-none" style="font-weight: bold;">
                    @Html.DisplayFor(modelItem => item.TransferPayment)
                </td>
            }
            else
            {
                <td class="details centeredTds" style="font-weight: bold;">
                    @Html.DisplayFor(modelItem => item.PricePerUnit)
                </td>
                <td class="details centeredTds" style="font-weight: bold;">
                    @Html.DisplayFor(modelItem => item.TransferPayment)
                </td>
            }
        }

        <td class="centeredTds">
            @Html.DisplayFor(modelItem => item.FullPrice)
        </td>
        <td class="centeredTds">
            @Html.DisplayFor(modelItem => item.Contractors.Name)
        </td>
        <td class="centeredTds">
            @if (item.ImageUrl != null)
            {
                <img class="images" src="@Html.DisplayFor(modelItem => item.ImageUrl)" width="100" />
            }
            else
            {@Html.DisplayFor(modelItem => item.ImageUrl)}
        </td>

        <td class="centeredTds">
            <a class="card-link ikonka getOrderId" title="Muokkaa Kulu" data-orderid="@item.MonthlySpendingID" role="button"><img src="/Icons/square-edit.svg" height="30"></a>
            <a class="card-link ikonka getId" title="Poista Kulu" data-id="@item.MonthlySpendingID" role="button"><img src="/Icons/square-delete.svg" height="30"></a>
        </td>
    </tr>
}
<script type="text/javascript">

    // create references to the modal...
    var modal = document.getElementById('myModals');
    // to all images -- note I'm using a class!
    var images = document.getElementsByClassName('images');
    // the image in the modal
    var modalImg = document.getElementById("img01");
    // and the caption in the modal
    // var captionText = document.getElementById("caption");

    // Go through all of the images with our custom class
    for (var i = 0; i < images.length; i++) {
        var img = images[i];
        // and attach our click listener for this image.
        img.onclick = function (evt) {
            modal.style.display = "block";
            modalImg.src = this.src;
            //captionText.innerHTML = this.alt;
        }
    }

    var span = document.getElementsByClassName("close")[0];

    span.onclick = function () {
        modal.style.display = "none";
    }
</script>