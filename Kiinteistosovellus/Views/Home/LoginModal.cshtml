@{
    ViewBag.Title = "LoginModal";
}
<div>
    @*The Modal*@
    <div class="modal" id="myModal">
        <div class="modal-dialog">
            <div class="modal-content">
                @*Modal Header*@
                <div class="modal-header">
                    @*<h4 class="modal-title">Modal Heading</h4>*@
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                @*Modal body*@
                <div class="modal-body">
                    @model Kiinteistosovellus.Models.Logins

                    @{
                        ViewBag.Title = "Login";
                    }

                    <h2>Login</h2>

                    @using (Html.BeginForm("Authorize", "Home", FormMethod.Post, new { id = "loginForm" }))
                    {


                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @*<h4>Users</h4>*@
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.LoginID)

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <label class="text-bg-danger">
                                @Html.DisplayFor(model => model.LoginErrorMessage)

                            </label>
                            @*<div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Login" class="btn btn-outline-dark" />
                                    </div>
                                </div>*@
                        </div>

                    }
                    @*Modal footer*@
                    <div class="modal-footer">
                    </div>


                    <div style="text-align:left">
                        <input type="submit" value="Login" class="btn btn-primary" form="loginForm" />


                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Back</button>

                    </div>

                    <div>
                        <p style="text-align:center">&copy;Login @DateTime.Now</p>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>



