@model IEnumerable<Kiinteistosovellus.Models.OtherSpendings>

@{
    ViewBag.Title = "Index";
}

<br />
<h2>Muut kulut</h2>
<br />
<div class="row">
    <div class="col-6">
        <div style="height: 338px" id="chartContainer"></div>
    </div>
    <div class="col-6">
        <div id="chartContainerBar"></div>
    </div>
</div>
<br />
<div style="margin-left:40%">@Html.DropDownList("Vuosi", (IEnumerable<SelectListItem>)ViewBag.Vuosi, null, new { @class = "form-control" })</div>
<a class="card-link ikonka creNewOtherSpending" title="Uusi Kulutus" role="button"><img src="/Icons/square-add.svg" height="45"></a>

@*Modal Containers*@
<iframe id="otherSpendingCreate" style="display:none;"></iframe>
<iframe id="otherSpendingEdit" style="display:none;"></iframe>
<iframe id="otherSpendingDelete" style="display:none;"></iframe>

<div class="card border-primary" style="margin:10px 0">
    <div class="card-header bg-primary" style="color: white; font-weight: bold;">Suodatus</div>
    <div class="card-body row">
        <div class="col-md-4">
            <label class="form-label">
                Kulutyyppi
            </label>
            <div class="dropdown form-group">
                <div class="form-select form-control" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    <div id="hidingField" style="margin-left:auto; margin-right:auto; color:gray">-- Valitse suodattimet --</div>
                </div>
                <ul style="width:100%" class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                    <li style="width:100%"><a class="dropdown-item activate-this" >Remontti</a></li>
                    <li style="width:100%"><a class="dropdown-item activate-this" >Puutarha</a></li>
                    <li style="width:100%"><a class="dropdown-item activate-this" >Investointi</a></li>
                </ul>
            </div>
        </div>
        <div class="col-md-4">
            <label class="form-label">
                Alkupäivämäärä
            </label>
            <input type="date" class="form-control" />
        </div>
        <div class="col-md-4">
            <label class="form-label">
                Loppupäivämäärä
            </label>
            <input type="date" class="form-control" />
        </div>
    </div>
</div>

<table class="table">
    <tr class="card-header bg-primary" style="color:white">
        @*---NAMES FROM TIETOHAKEMISTO---*@
        @*<th>Päivämäärä / Alkupäivämäärä</th>
            <th>Loppupäivämäärä</th>
            <th>Kulutustyyppi</th>
            <th>Kuvaus</th>
            <th>Hinta yhteensä</th>
            <th>Nimi</th>*@

        @*---IN MY OPINION BETTER VERSION---*@
        @*<th>Alkupäivämäärä</th>
            <th>Loppupäivämäärä</th>
            <th>Kulutustyyppi</th>
            <th style="width:40%">Kuvaus</th>
            <th>Hinta</th>
            <th>Urakoitsija</th>*@

        @*---IN MY OPINION THE BEST VERSION---*@
        <th>Aloituspvm</th>
        <th>Päättymispvm</th>
        <th>Kulutustyyppi</th>
        <th style="width:45%">Kuvaus</th>
        <th>Hinta</th>
        <th>Urakoitsija</th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="card-body filtering">
            <td>@Html.ValueFor(modelItem => item.DateBegin, "{0:dd.MM.yyyy}")</td>
            <td>@Html.ValueFor(modelItem => item.DateEnd, "{0:dd.MM.yyyy}")</td>
            <td>@Html.DisplayFor(modelItem => item.OtherSpendingTypes.TypeName)</td>
            <td style="word-break:break-word">@Html.DisplayFor(modelItem => item.Description)</td>
            <td>@Html.DisplayFor(modelItem => item.Price)</td>
            <td>@Html.DisplayFor(modelItem => item.Contractors.Name)</td>

            <td>
                <a class="card-link getOtherSpendingId" role="button" data-otherspendingid="@item.OtherSpendingsID">Muokkaa</a> |
                <a class="card-link delOtherSpendingId" role="button" data-otherspendingid2="@item.OtherSpendingsID">Poista</a>
            </td>
        </tr>
    }

</table>

<script type="text/javascript">
    $(".activate-this").click(function () {
        event.stopPropagation();
        if ($(this).hasClass("active")) {
            $(this).removeClass("active");
        } else {
            $(this).addClass("active");
        }
        filterTable("hidingField", "dropdownMenuButton1");
    });


    $(function () {
        $(".creNewOtherSpending").click(function () {
            var url = "/OtherSpendings/_ModalCreate";
            var $detailDivCreate = $("#otherSpendingCreate");

            $.get(url, function (data) {
                $detailDivCreate.replaceWith(data);
                $('#ModalOtherSpendingCreate').modal('show');
            });
        });
    });

    /*Edit Modal Window*/
    $(function () {
        $(".getOtherSpendingId").click(function () {
            let otherSpendingId = $(this).data("otherspendingid");
            var url = "/otherspendings/_ModalEdit/?id=" + otherSpendingId;
            var $detailDivEdit = $("#otherSpendingEdit");

            $.get(url, function (data) {
                $detailDivEdit.replaceWith(data);
                $('#ModalotherSpendingEdit').modal('show');
            });
        });
    });


    /*Delete Modal Window*/
    $(function () {
        $(".delOtherSpendingId").click(function () {
            let otherSpendingId2 = $(this).data("otherspendingid2");
            var url = "/otherspendings/_ModalDelete/?id=" + otherSpendingId2;
            var $detailDivDelete = $("#otherSpendingDelete");

            $.get(url, function (data) {
                $detailDivDelete.replaceWith(data);
                $('#ModalOtherSpendingDelete').modal('show');
            });
        });
    });

    //On page load showes chart's partials with data for current year
    $(document).ready(async function () {
        var thisYear = new Date().getFullYear();
        document.getElementById("Vuosi").value = thisYear;
        var url = "/OtherSpendings/Chart/?year=" + thisYear;
        var urlBar = "/OtherSpendings/BarChart/?year=" + thisYear;
        var divForPartial = $("#chartContainer");
        var divForPartialBar = $("#chartContainerBar");

        await $.ajax({
            url: url,
            cache: false,
            contentType: false,
            processData: false,
            method: 'get',
            type: "get",
            success: function (result) {
                $(divForPartial).html("");
                $(divForPartial).html(result);
            }
        });
        await $.ajax({
            url: urlBar,
            cache: false,
            contentType: false,
            processData: false,
            method: 'get',
            type: "get",
            success: function (result) {
                $(divForPartialBar).html("");
                $(divForPartialBar).html(result);
            }
        });
    });

    //On year's dropdown change showes chart's partials with data for selected year
    $('#Vuosi').change(async function () {
        var thisYear = $(this).val();
        var url = "/OtherSpendings/Chart/?year=" + thisYear;
        var urlBar = "/OtherSpendings/BarChart/?year=" + thisYear;
        var divForPartial = $("#chartContainer");
        var divForPartialBar = $("#chartContainerBar");

        await $.ajax({
            url: url,
            cache: false,
            contentType: false,
            processData: false,
            method: 'get',
            type: "get",
            success: function (result) {
                $(divForPartial).html("");
                $(divForPartial).html(result);
            }
        });
        await $.ajax({
            url: urlBar,
            cache: false,
            contentType: false,
            processData: false,
            method: 'get',
            type: "get",
            success: function (result) {
                $(divForPartialBar).html("");
                $(divForPartialBar).html(result);
            }
        });
    });
    //function filterTable(value) {
    //    console.log(value);

    //    //etsi kaikki rivit taulukosta, jossa filtering-class
    //    var rows = $(".filtering"),
    //        rowsLength = rows.length;
    //    console.log(rowsLength);

    //    var activateThis = $(".activate-this");
    //    var activeSelect = [];
    //    for (var i = 0; i < activateThis.length; i++) {
    //        //console.log(activateThis[i].hasClass("active"));
    //        if ($(activateThis[i]).hasClass("active")) {
    //            activeSelect.push(activateThis[i].innerText);
    //        }
    //    }
    //    console.log(activeSelect);

    //    var spans = $(".spans");
    //    if (activeSelect.length == 0) {
    //        $("#hidingField").removeClass("d-none");
    //    } else {
    //        $("#hidingField").addClass("d-none");
    //    }

    //    for (var i = 0; i < spans.length; i++) {
    //        spans[i].remove();
    //    }
        
    //    for (var i = 0; i < activeSelect.length; i++) {
    //        $("#dropdownMenuButton1").append('<span class="badge rounded-pill bg-success spans">' + activeSelect[i] + '</span>');
    //    }
        

    //    for (var i = 0; i < rowsLength; ++i) {

    //        if (activeSelect.length == 0) {
    //            for (var k = 0; k < rowsLength; k++) {
    //                $(rows[k]).removeClass("d-none");
    //            }
    //            return;
    //        } else {
    //            $(rows[i]).addClass("d-none");
    //        } 

    //        var tds = rows[i].getElementsByTagName('td'),
    //            tdsLength = tds.length;

    //        console.log(tds);
    //        for (var tdsCounter = 0; tdsCounter < tdsLength; ++tdsCounter) {
    //            for (var k = 0; k < activeSelect.length; k++) {
    //                if (tds[tdsCounter].innerText.indexOf(activeSelect[k]) > -1) {
    //                    $(rows[i]).removeClass("d-none");
    //                }
    //            }
    //        }
    //    }

        //if (value == '') {//Jos valinta deaktivoidaan, kaikista poistetaan class d-none ja lisätään d-block eli tuodaan näkyviin
        //    for (var i = 0; i < rowsLength; ++i) {
        //        $(rows[i]).removeClass("d-none");
        //    }
        //} else {//Muussa tapauksessa käydään rivit läpi
        //    for (var i = 0; i < rowsLength; ++i) {
        //        $(rows[i]).addClass("d-none");

        //        var tds = rows[i].getElementsByTagName('td'),
        //            tdsLength = tds.length;

        //        console.log(tds);
        //        for (var tdsCounter = 0; tdsCounter < tdsLength; ++tdsCounter) {
        //            if (tds[tdsCounter].innerText.indexOf(value) > -1) {
        //                $(rows[i]).removeClass("d-none");
        //            }
        //        }
        //    }
        //}
    //}
</script>